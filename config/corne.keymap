/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | N/A | ,(')| .(")|  P  |  Y  |  F  |      |  G  |  C  |  R  |  L  | DEL | N/A |
// | N/A |  A  |  O  |  E  |  U  |  I  |      |  D  |  H  |  T  |  N  |  S  | N/A |
// | N/A | SHFT|  Q  |  J  |  K  |  X  |      |  B  |  M  |  W  |  V  |  Z  | N/A |
//                  | CTRL | LWR | SPC |      | BKSP | RSE  | ENT |
                        bindings = <
   &kp A &modmorph(COMM, LSHIFT, SQT) &modmorph(DOT, LSHIFT, DQT) &kp P &kp Y &kp F   &kp G &kp C  &kp R &kp L &kp DEL &kp A
   &kp A &kp A &kp O &kp E &kp U &kp I   &kp D &kp H  &kp T &kp N &kp S &kp A
   &kp A &kp LSHFT &kp Q &kp J &kp K &kp X   &kp B &kp M  &kp W &kp V &kp Z &kp A
                  &kp LCTRL &mo 1 &kp SPACE   &kp BSPC &mo 2 &kp RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | N/A | TAB |  A  |  A  |  A  |  A  |   |  1  |  2  |  3  | +(-)| £($)| N/A |
// | N/A |  A  |  A  |  A  |  A  |  A  |   |  4  |  5  |  6  | %(=)| *(^)| N/A |
// | N/A |  A  |  A  |  A  |  A  |  A  |   |  7  |  8  |  9  | <(>)| /(\)| N/A |
//                    | GUI |     | SPC |   | ENT |  0  | ALT |
                        bindings = <
   &kp A &kp N1 &kp N2 &kp N3 &kp N4 &kp N5    &kp N1 &kp N2 &kp N3 &modmorph(PLUS, LSHIFT, MINUS) &modmorph(AAA, LSHIFT, AAA) PRCNT &kp A
   &kp A &kp N1 &kp N2 &kp N3 &kp N1 &kp N2    &kp N4 &kp N5 &kp N6 &modmorph(PRCNT, LSHIFT, EQUAL) &modmorph(ASTRK, LSHIFT, CARET) &kp A
   &kp A &kp N2 &kp N3 &kp N1 &kp N2 &kp N3    &kp N7 &kp N8 &kp N9 &modmorph(LT, LSHIFT, GT) &modmorph(FSLH, LSHIFT, BSLH) &kp A
        &kp LGUI     &trans       &kp SPACE    &kp RET &kp N0 &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | N/A |  A  |  A  |  A  |  ⬆  |  A  |   |  1  |  2  |  3  |  +  |  %  | N/A |
// | N/A |  A  |  A  |  ⬅ |  ⬇  |  ⮕ |   |  4  |  5  |  6  |  -  |  <  | N/A |
// | N/A |  A  |  A  |  A  |  A  |  A  |   |  7  |  8  |  9  |  =  |  >  | N/A |
//                    | GUI |     | SPC |   | ENT |  0  | ALT |
                        bindings = <
   &kp A &kp N1 &kp A &kp A &kp UP &kp A    &kp N1 &kp N2 &kp N3 &kp PLUS &kp PRCNT &kp A
   &kp A &kp N1 &kp A &kp RIGHT &kp DOWN &kp LEFT    &kp N4 &kp N5 &kp N6 &kp MINUS &kp GT &kp A
   &kp A &kp N2 &kp A &kp A &kp A &kp A    &kp N7 &kp N8 &kp N9 &kp EQUAL &kp LT &kp A
        &kp LGUI     &trans       &kp SPACE    &kp RET &kp N0 &kp RALT
                        >;
                };
        };
};
