/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <behaviors/num_word.dtsi>


/ {
    behaviors {
        

        croc: croc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp GT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp NON_US_BACKSLASH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lines: underscore_pipe {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp PIPE2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fancyl: minus_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        equlpls: equal_plus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        prcntastk: percent_asterisk {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PRCNT>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        qusthat: question_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp CARET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        backs: back_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BKSP>, <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        esctb: esc_tab {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TAB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        uppies: shift_caps {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>;

            mods = <(MOD_LCTL)>;
        };

        money: pound_dollar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp POUND>, <&kp DOLLAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        atmps: at_amps {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp AMPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        exchsh: exclamation_hash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp BSLH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        coppy: tap_dance_copy_paste {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(C)>, <&kp LC(V)>;
        };

        qur: tap_dance_q_undo_redo {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LC(Z)>, <&kp LC(Y)>;
        };

         innie: tap_dance_space_enter {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp RET>;
        };
      
      num_word: num_word {
        #binding-cells = <0>;
        compatible = "zmk,behavior-num-word";
        continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL LPAR RPAR>;
        ignore-numbers;
  };
      nummies: new_num_word {
        #binding-cells = <0>;
        compatible = "zmk,behavior-num-word";
        layers = <(1)>;
        continue-list = <BSPC EQUAL>;
        ignore-numbers;

      retr: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "retro-tap";
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            bindings = <&kp LSHIFT>, <&kp SPACE>;
            hold-trigger-key-positions = <1>;    // <---[[the W key]]
        };
    };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | N/A | LWR |esctb|  P  |  Y  |  F  |      |  G  |  C  |  R  |  L  | RSE | N/A |
            // | N/A |  A  |  O  |  E  |  U  |  I  |      |  D  |  H  |  T  |  N  |  S  | N/A |
            // | N/A |coppy|  Q  |  J  |  K  |  X  |      |  B  |  M  |  W  |  V  |  Z  | N/A |
            //                    | ENT |  ⬆  | __(↵)|  |BK(DE)| .(') | ,(") |

            bindings = <
&none  &tog 2  &esctb  &mt MINUS P  &mt DQT Y  &mt EXCL F                    &kp G   &kp C    &kp R    &kp L  &tog 1  &none
&none  &kp A   &kp O   &kp E      &kp U     &mt QMARK I                    &kp D   &kp H    &kp T    &kp N  &kp S   &none
&none  &coppy  &qur    &kp J      &kp K     &kp X                    &kp B   &kp M    &kp W    &kp V  &kp Z   &none
                     &kp LSHIFT &mt SINGLE_QUOTE DOT &retr      &kp backs  &mt AT COMMA &kp RET 
            >;
        };

        lower_layer {
            // ---------------------https://github.com/FlaviaRas/zmk-configold/issues--------------------------------------------------------------------
            // | N/A | LWR | £($)| -(~)| @(&)| !(#)|      |  1  |  2  |  3  | =(+)| RSE | N/A |
            // | N/A | /(\)| <(>)| %(*)| :(;)| ?(^)|      |  4  |  5  |  6  |     |     | N/A |
            // | N/A |coppy| _(|)| {(})| [(])| (())|      |  7  |  8  |  9  |     |     | N/A |
            //                   | ENT | .(') |SPACE |  |BK(DE)| ,(") |  ⬆  |

            bindings = <
&trans  &trans  &money   &fancyl        &atmps          &exchsh                &kp N1  &kp N2                         &kp N3  &equlpls    &trans  &trans
&trans  &slash  &croc    &prcntastk     &mt SEMI COLON  &qusthat               &kp N4  &kp N5                         &kp N6  &trans  &trans   &trans
&trans  &trans  &lines   &mt RBRC LBRC  &mt RBKT LBKT   &mt RPAR LPAR          &kp N7  &kp N8                         &kp N9  &trans      &trans &trans
                                          &trans    &trans     &trans      &trans  &mt COMMA N0  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | N/A | LWR |     |  ⬆  |     |     |      |  V+ |  V- |  Vx |PSCN | RSE | N/A |
            // | N/A |     |  ⬅ |  ⬇  |  ⮕ |     |      | home |     |    |  B+ |  B- | N/A |
            // | N/A |     |     |     |     |     |      |     |     |     |     |     | N/A |
            //                   | ENT | .(') |SPACE |  |BK(DE)| ,(") |  ⬆  |

            bindings = <
&trans  &trans  &trans    &kp UP    &trans     &trans    &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &kp PSCRN     &trans        &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &kp RWIN      &trans        &trans      &kp C_BRI_UP  &kp C_BRI_DN  &trans
&trans  &trans  &trans    &trans    &trans     &trans    &trans        &trans        &trans      &kp C_SLEEP       &trans        &trans
                          &trans    &trans     &trans    &trans        &trans &trans  
            >;
        };
    };
};
